
/* public/style.css */
html, body, #root {
  height: 100%;
  margin: 0;
  font-family: sans-serif;
}
/* body {
    margin: 0;
    overflow: hidden;
    font-family: sans-serif;
    display: flex;
} */
#root {
  display: flex; /* Use flexbox for layout if desired */
  flex-direction: column; /* Or 'row' depending on your layout */
}
/* This is the div from App.tsx */
#canvas-container {
  flex-grow: 1; /* Allows it to take up available space in a flex container */
  width: 100%;
  /* For non-flex layout, you might need explicit height: */
  /* height: calc(100vh - 100px); /* Example: full viewport height minus some space for controls */
  min-height: 300px; /* Ensure it has at least some height */
  background-color: #111; /* Temporary background to see its bounds */
  position: relative; /* Good for positioning things inside it later if needed */
}
/* Ensure the host for the Three.js canvas also behaves correctly */
#orbital-canvas-host {
  width: 100%;
  height: 100%;
  display: block; /* Important for canvas to behave like a block element */
}
#controls {
    padding: 10px;
    background-color: #f0f0f0;
    position: absolute;
    top: 10px;
    left: 10px;
    background: rgba(255, 255, 255, 0.8);
    border-radius: 8px;
    box-shadow: 0 4px 8px rgba(0,0,0,0.1);
    z-index: 100; /* Ensure controls are above canvas */
    display: flex;
    flex-direction: column;
    gap: 10px;
    max-height: 90vh; /* Prevent controls from overflowing if many options */
    overflow-y: auto; /* Allow scrolling if content overflows */
}
.control-group {
    display: flex;
    align-items: center;
    gap: 10px;
}
label {
    min-width: 30px; /* Adjusted for longer labels */
}
input[type="number"], select {
    padding: 5px;
    border-radius: 4px;
    border: 1px solid #ccc;
    width: 80px; /* Consistent width */
}
button {
    padding: 8px 15px;
    background-color: #007bff;
    color: white;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    font-size: 16px;
    align-self: flex-start; /* Align button to the left */
}
button:hover {
    background-color: #0056b3;
}

/* --- LOADING SPINNER CSS --- */
#loading-spinner {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background-color: rgba(255, 255, 255, 0.95);
  padding: 25px;
  border-radius: 10px;
  box-shadow: 0 4px 15px rgba(0,0,0,0.2);
  z-index: 10000; /* Very high z-index */
  display: flex;
  flex-direction: column;
  align-items: center;
  color: #333;
}

.spinner {
  border: 5px solid #e0e0e0; /* Light grey */
  border-top: 5px solid #3498db; /* Blue */
  border-radius: 50%;
  width: 40px;
  height: 40px;
  animation: spin 1s linear infinite;
  margin-bottom: 15px;
}

@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}
/* --- END LOADING SPINNER CSS --- */
